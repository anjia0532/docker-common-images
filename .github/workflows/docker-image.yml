name: Docker Image CI

on:
  workflow_dispatch:
    inputs:
      name:
        type: choice
        description: Image Type
        options:
          - synergy-serial
          - arthas-alpine
          - arthas-slim
          - arthas-tunnel-server
          - arthas-tunnel-server-slim
          - sentinel
          - tdengine
          - ffmpeg
          - nginx
          - openresty-rebel
          - yapi
          - curator
      version:
        description: 'Version of application'
        required: true
      baseImage:
        description: 'Version of Image'
        required: false

jobs:
  push_to_registry:
    name: build and push docker images
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.HUB_NAME }}
          password: ${{ secrets.HUB_PWD }}

      - name: Build Synergy-Serial image
        uses: docker/build-push-action@v3
        if: github.event.inputs.name == 'synergy-serial'
        with:
          context: arthas
          file: synergy-serial/Dockerfile
          push: true
          build-args: |
            SYNERGY_VERSION=${{ github.event.inputs.version }}
          tags: |
            anjia0532/synergy-serial:${{ github.event.inputs.version }}
          cache-from: type=registry,ref=anjia0532/synergy-serial:latest
          cache-to: type=inline

      - name: Build Arthas-Tunnel-Jdk-Slim
        uses: docker/build-push-action@v3
        if: github.event.inputs.name == 'arthas-tunnel-server-slim'
        with:
          context: arthas
          file: arthas/Tunnel-ServerDockerfile-slim
          push: true
          build-args: |
            BASE_IMAGE=${{ github.event.inputs.baseImage }}
            ARTHAS_VERSION=${{ github.event.inputs.version }}
          tags: |
            anjia0532/arthas-${{ github.event.inputs.baseImage }}:${{ github.event.inputs.version }}-tunnel-server
          cache-from: type=registry,ref=anjia0532/arthas-${{ github.event.inputs.baseImage }}:latest
          cache-to: type=inline

      - name: Build Arthas-Jdk-Slim
        uses: docker/build-push-action@v3
        if: github.event.inputs.name == 'arthas-slim'
        with:
          context: arthas
          file: arthas/Dockerfile-slim
          push: true
          build-args: |
            BASE_IMAGE=${{ github.event.inputs.baseImage }}
            ARTHAS_VERSION=${{ github.event.inputs.version }}
          tags: |
            anjia0532/arthas-${{ github.event.inputs.baseImage }}:${{ github.event.inputs.version }}
            anjia0532/arthas-${{ github.event.inputs.baseImage }}:latest
          cache-from: type=registry,ref=anjia0532/arthas-${{ github.event.inputs.baseImage }}:latest
          cache-to: type=inline

      - name: Build Arthas-Jdk-Alpine
        uses: docker/build-push-action@v3
        if: github.event.inputs.name == 'arthas-alpine'
        with:
          context: arthas
          file: arthas/Dockerfile
          push: true
          build-args: |
            BASE_IMAGE=${{ github.event.inputs.baseImage }}
            ARTHAS_VERSION=${{ github.event.inputs.version }}
          tags: |
            anjia0532/arthas-${{ github.event.inputs.baseImage }}:${{ github.event.inputs.version }}
            anjia0532/arthas-${{ github.event.inputs.baseImage }}:latest
          cache-from: type=registry,ref=anjia0532/arthas-${{ github.event.inputs.baseImage }}:latest
          cache-to: type=inline

      - name: Build tdengine image
        uses: docker/build-push-action@v3
        if: github.event.inputs.name == 'tdengine'
        with:
          context: tdengine/
          push: true
          build-args: |
            TD_ENGINE_VERSION=${{ github.event.inputs.version }}
          tags: |
            anjia0532/tdengine:${{ github.event.inputs.version }}
            anjia0532/tdengine:latest
          cache-from: type=registry,ref=anjia0532/tdengine:latest
          cache-to: type=inline

      - name: Build alibaba sentinel image
        uses: docker/build-push-action@v3
        if: github.event.inputs.name == 'sentinel'
        with:
          context: sentinel/
          push: true
          build-args: |
            SENTINEL_VERSION=${{ github.event.inputs.version }}
          tags: |
            anjia0532/sentinel-docker:${{ github.event.inputs.version }}
            anjia0532/sentinel-docker:latest
          cache-from: type=registry,ref=anjia0532/sentinel-docker:latest
          cache-to: type=inline

      - name: Build elastic curator image
        uses: docker/build-push-action@v3
        if: github.event.inputs.name == 'curator'
        with:
          context: curator/
          push: true
          build-args: |
            CURATOR_VERSION=${{ github.event.inputs.version }}
          tags: |
            anjia0532/docker-curator:${{ github.event.inputs.version }}
            anjia0532/docker-curator:latest
          cache-from: type=registry,ref=anjia0532/docker-curator:latest
          cache-to: type=inline

      - name: Build yapi image
        uses: docker/build-push-action@v3
        if: github.event.inputs.name == 'yapi'
        with:
          context: yapi/
          push: true
          build-args: |
            YAPI_VERSION=${{ github.event.inputs.version }}
          tags: |
            anjia0532/yapi-docker:${{ github.event.inputs.version }}
            anjia0532/yapi-docker:latest
          cache-from: type=registry,ref=anjia0532/yapi-docker:latest
          cache-to: type=inline
